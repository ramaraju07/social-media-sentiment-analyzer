# -*- coding: utf-8 -*-
"""Untitled3.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jZBXgRRmdRyBBTlHuiuwuPnRRldIJTAW
"""

!pip install streamlit
!pip install pyngrok
!pip install textblob
!pip install vaderSentiment

# Step 1: Import required libraries
import streamlit as st
from textblob import TextBlob
from vaderSentiment.vaderSentiment import SentimentIntensityAnalyzer

# Step 2: Initialize VADER sentiment analyzer
analyzer = SentimentIntensityAnalyzer()

# Step 3: Define TextBlob sentiment analysis function
def analyze_sentiment_textblob(text):
    blob = TextBlob(text)
    polarity = blob.sentiment.polarity
    return polarity

# Step 4: Define VADER sentiment analysis function
def analyze_sentiment_vader(text):
    score = analyzer.polarity_scores(text)
    return score

# Step 5: Add custom CSS styles for better UI
st.markdown("""
    <style>
        .stApp {
            background: linear-gradient(to bottom, #f3e5f5, #fff);
            padding: 30px;
            border-radius: 12px;
            color: #2c2c2c;
            font-family: 'Segoe UI', sans-serif;
        }
        h1, h2 {
            text-align: center;
            color: #2e2e2e;
            font-weight: bold;
        }
        h1 {
            font-size: 44px;
            margin-bottom: 10px;
        }
        h2 {
            font-size: 28px;
            margin-bottom: 25px;
        }
        .stTextArea textarea {
            font-size: 18px;
            padding: 15px;
            border-radius: 10px;
            border: 1px solid #ccc;
        }
        .stTextArea textarea:focus {
            border-color: #ab47bc;
            box-shadow: 0 0 5px #ab47bc;
        }
        .stButton button {
            background: linear-gradient(135deg, #ba68c8, #9c27b0);
            color: white;
            font-size: 18px;
            padding: 12px 28px;
            border-radius: 10px;
            border: none;
            cursor: pointer;
            transition: transform 0.2s ease, background 0.3s ease;
        }
        .stButton button:hover {
            background: linear-gradient(135deg, #8e24aa, #6a1b9a);
            transform: scale(1.05);
        }
        .result-box {
            background-color: #ffffff;
            border-left: 6px solid #ab47bc;
            padding: 20px;
            margin: 15px 0;
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0,0,0,0.05);
            color: #212121;
        }
        .result-title {
            font-size: 22px;
            color: #333;
            margin-bottom: 8px;
            font-weight: 600;
        }
        .sentiment-result {
            font-size: 20px;
            padding: 12px;
            border-radius: 10px;
            text-align: center;
            font-weight: bold;
            margin-top: 20px;
        }
        .positive {
            background-color: #c8e6c9;
            color: #1b5e20;
        }
        .negative {
            background-color: #ffcdd2;
            color: #b71c1c;
        }
        .neutral {
            background-color: #bbdefb;
            color: #0d47a1;
        }
    </style>
""", unsafe_allow_html=True)

# Step 6: Streamlit UI Title and Subheader
st.title("üí¨ Social Media Sentiment Analyzer")
st.subheader("üîç Enter a social media post or comment for AI-powered sentiment analysis")

# Step 7: Text input field
user_input = st.text_area("üìù Enter text here", help="Paste or type a social media post or comment for sentiment analysis.")

# Step 8: Analyze button and logic
if st.button("üöÄ Analyze Sentiment"):
    if user_input.strip():
        polarity = analyze_sentiment_textblob(user_input)
        vader_score = analyze_sentiment_vader(user_input)

        st.markdown("<div class='result-box'>", unsafe_allow_html=True)
        st.markdown("<div class='result-title'>üìä TextBlob Polarity Score</div>", unsafe_allow_html=True)
        st.write(f"{polarity:.2f}")

        st.markdown("<div class='result-title'>üß† VADER Sentiment Scores</div>", unsafe_allow_html=True)
        st.write(f"Positive: {vader_score['pos']:.2f}")
        st.write(f"Negative: {vader_score['neg']:.2f}")
        st.write(f"Neutral: {vader_score['neu']:.2f}")
        st.write(f"Compound: {vader_score['compound']:.2f}")
        st.markdown("</div>", unsafe_allow_html=True)

        if polarity > 0:
            label = "üòä Overall Sentiment: Positive"
            style = "positive"
        elif polarity < 0:
            label = "‚òπ Overall Sentiment: Negative"
            style = "negative"
        else:
            label = "üòê Overall Sentiment: Neutral"
            style = "neutral"

        st.markdown(f"<div class='sentiment-result {style}'>{label}</div>", unsafe_allow_html=True)
    else:
        st.warning("‚ö† Please enter some text before analyzing.")

from pyngrok import ngrok

# Set the auth token for pyngrok
ngrok.set_auth_token("2wfL8fQCT67vQcEpAjtfB4YXux6_6ZqJQWN4UdoB1QGewTdWb")

# Start a new tunnel (for example, for Streamlit on port 8501)
public_url = ngrok.connect(8501)
print("Your Streamlit app is live at:", public_url)